<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>-1</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Объявляем все переменные патроны и т.д.</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if room == PlayRoom{
    //Переменные всех пуль обнуляем
    
    global.red = 10
    global.orange = 10
    global.yellow = 10
    global.green = 10
    global.blue = 10
    global.darkBlue = 10
    global.purple = 10
    /*
    //Случайная генерация патрон от секунд
    ReOrYeGrBlDaPu = current_second
    ReOrYeGrBlDaPu %= 7
    if ReOrYeGrBlDaPu == 0
        {global.red = 2}
    if ReOrYeGrBlDaPu == 1
        {global.orange = 2}
    if ReOrYeGrBlDaPu == 2
        {global.yellow = 2}
    if ReOrYeGrBlDaPu == 3
        {global.green = 2}
    if ReOrYeGrBlDaPu == 4
        {global.blue = 2}
    if ReOrYeGrBlDaPu == 5
        {global.darkBlue = 2}
    if ReOrYeGrBlDaPu == 6
        {global.purple = 2}*/
}
//Определяем положеине иконки выбора цвета
global.one = true
global.two = false
global.three = false
global.four = false
global.five = false
global.six = false
global.seven = false
global.zero = false

//глобальные магазины ложь
global.shop = false
collor = c_white;
iter = 1;
alarm[4] = 4;

//Определение комнаты
global.room_control = false;

//таймер босса
alarm[6] = 30;
time = 0
if room == PlayRoom{maxtime = 5;}//750
if room == PlayRoom2{maxtime = 750;}
global.boss = 0
if room == PlayRoom{
    //Отсчёт времени
    global.s = 0 ///  секунда (глобальная)
    global.m = 0 /// минута(глобальная)
    global.h = 0 ///  час (глобальная)
    global.d = 0 /// день (глобальная)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Заменяем стандарный курсор</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>-1</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="6">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Перезапуск таймера</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>time += 1

if time == maxtime and global.boss == 0 {
    global.boss = 1
    audio_play_sound(boss_noise, 0, false)
}    
    
if global.boss == 1 and time == maxtime {
    instance_create(1300,450,obj_boss1)
}

alarm[6] = 30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="2" enumb="4">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if iter == 1{
    collor = c_red;
    iter += 1;
}else if iter == 2{
    collor = c_orange;
    iter += 1;
}else if iter == 3{
    collor = c_yellow;
    iter += 1;
}else if iter == 4{
    collor = c_green;
    iter += 1;
}else if iter == 5{
    collor = c_aqua;
    iter += 1;
}else if iter == 6{
    collor = c_blue;
    iter += 1;
}else if iter == 7{
    collor = c_purple;
    iter = 1;
}

if global.room_control == false
    global.room_control = true;
    
alarm[4] = 4;
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="8" enumb="0">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Житухи отрисовываем</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>714</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_life_images</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>30</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>10</string>
          </argument>
          <argument>
            <kind>5</kind>
            <sprite>spr_live</sprite>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Шрифт отпределяем</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>526</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_font</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>12</kind>
            <font>game_fond</font>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Отрисовка нижнего меню</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_aqua)
draw_text(400,10,string(global.h)+"h "+string(global.m)+":"+string(global.s));//Таймер
draw_set_color(c_yellow)//Цвет шрифта
draw_text(700,10,"Score: " + string(score));//Очки
draw_set_color(c_fuchsia)
draw_text(1100,10,"Accuracy:");// + string(global.missed));//Попадание

if (100-(global.missed/(score/100)) &lt; 0){
    draw_text(1250,10,"0%")}
else if (100-(global.missed/(score/100)) &gt; 100){
    draw_text(1250,10,"100%")}
else{
    draw_text(1250,10,string(100-(global.missed/(score/100))) + "%")}//Процент точности
//draw_text(1250,10,string(((score*100)/global.missed) + "%"));//Исправленный процент

//Отрисовка патрон цвета
draw_set_color(c_red);
draw_text(16,722,"1 ");
draw_set_color(c_orange);
draw_text(130,722,"2 ");
draw_set_color(c_yellow);
draw_text(245,722,"3 ");
draw_set_color(c_green);
draw_text(359,722,"4 ");
draw_set_color(c_aqua);
draw_text(472,722,"5 ");
draw_set_color(c_blue);
draw_text(586,722,"6 ");
draw_set_color(c_purple);
draw_text(700,722,"7 ");

//Если каждого цвета собранно 10 то можно отрисовать магазин
if (global.red&gt;=10 and global.orange&gt;=10 and global.yellow&gt;=10 and global.green&gt;=10 and global.blue&gt;=10 and global.darkBlue&gt;=10 and global.purple&gt;=10)
{draw_set_color(c_white);
draw_text(1263,665," Shop ")
draw_text(1255,725,"0")
//Звук активации магазина
if !audio_is_playing(shop_bleep){
    audio_play_sound(shop_bleep,0,true)}
draw_sprite(spr_shope,-1,1280,700);global.shop = true}
else{global.shop = false;
audio_stop_sound(shop_bleep)}//Если нет то магазин ложь
//Отрисока тестовой информации
//if global.shop == false {draw_text(1261,700,"Shop - false")}
//if global.shop == true {draw_text(1261,700,"Shop - true")}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Переменные нижнего меню.</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(collor);//Цвет текста
if global.one == true//Если начата кнока1
    {draw_rectangle(13,722,32,753,true);
    draw_rectangle(12,721,33,754,true);}//Рисокать прямогуголиник на ней
if global.two == true//Если начата кнока2
    {draw_rectangle(127,722,146,753,true);
    draw_rectangle(126,721,147,754,true);}//Рисокать прямогуголиник на ней
if global.three == true//Если начата кнока3
    {draw_rectangle(241,722,260,753,true);
    draw_rectangle(240,721,261,754,true);}//Рисокать прямогуголиник на ней
if global.four == true//Если начата кнока4
    {draw_rectangle(355,722,374,753,true);
    draw_rectangle(354,721,375,754,true);}//Рисокать прямогуголиник на ней
if global.five == true//Если начата кнока5
    {draw_rectangle(469,722,488,753,true);
    draw_rectangle(468,721,489,754,true);}//Рисокать прямогуголиник на ней
if global.six == true//Если начата кнока6
    {draw_rectangle(583,722,602,753,true);
    draw_rectangle(582,721,603,754,true);}//Рисокать прямогуголиник на ней
if global.seven == true//Если начата кнока7
    {draw_rectangle(697,722,716,753,true);
    draw_rectangle(696,721,717,754,true);}
if global.zero == true and global.shop == true//Если начата кнока0 и магазин правда
    {draw_rectangle(1270,695,1350,765,true);//Рисокать прямогуголиник на ней
    draw_rectangle(1271,696,1351,766,true);
    draw_text(1090,690,"Press Enter")}//Просить нажать энтер

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Примочки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>524</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_color</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>13</kind>
            <string>8421631</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>y = global.lazerY-2;//Коректировка отображения лазера
x = global.lazerX+17
if global.aimed_shot = true {//Если куплен прицел
    draw_line(x,y,1366,y)
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Цветные палочки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.red &gt; 0
{
    var xx, temp;
    xx=global.red;
    temp=sprite_index
    sprite_index=spr_red_one;
    repeat(global.red) {draw_sprite(spr_red_one,-1,41+(xx-1)*sprite_width,722); xx-=1}
    sprite_index=temp;
}
if global.orange &gt; 0
{
    var xx, temp;
    xx=global.orange;
    temp=sprite_index
    sprite_index=spr_orange_two;
    repeat(global.orange) {draw_sprite(spr_orange_two,-1,159+(xx-1)*sprite_width,741); xx-=1}
    sprite_index=temp;
}
if global.yellow &gt; 0
{
    var xx, temp;
    xx=global.yellow;
    temp=sprite_index
    sprite_index=spr_yellow_three;
    repeat(global.yellow) {draw_sprite(spr_yellow_three,-1,269+(xx-1)*sprite_width,722); xx-=1}
    sprite_index=temp;
}
if global.green &gt; 0
{
    var xx, temp;
    xx=global.green;
    temp=sprite_index
    sprite_index=spr_green_four;
    repeat(global.green) {draw_sprite(spr_green_four,-1,383+(xx-1)*sprite_width,722); xx-=1}
    sprite_index=temp;
}
if global.blue &gt; 0
{
    var xx, temp;
    xx=global.blue;
    temp=sprite_index
    sprite_index=spr_blue_five;
    repeat(global.blue) {draw_sprite(spr_blue_five,-1,497+(xx-1)*sprite_width,722); xx-=1}
    sprite_index=temp;
}
if global.darkBlue &gt; 0
{
    var xx, temp;
    xx=global.darkBlue;
    temp=sprite_index
    sprite_index=spr_blue_six;
    repeat(global.darkBlue) {draw_sprite(spr_blue_six,-1,609+(xx-1)*sprite_width,722); xx-=1}
    sprite_index=temp;
}
if global.purple &gt; 0
{
    var xx, temp;
    xx=global.purple;
    temp=sprite_index
    sprite_index=spr_purple_seven;
    repeat(global.purple) {draw_sprite(spr_purple_seven,-1,725+(xx-1)*sprite_width,722); xx-=1}
    sprite_index=temp;
}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>501</id>
        <kind>0</kind>
        <userelative>-1</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_draw_sprite</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_boss1_logo</sprite>
          </argument>
          <argument>
            <kind>0</kind>
            <string>1120</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>720</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>-1</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>таймер</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_healthbar(850,745,1100,750,(time/maxtime)*100,c_purple,c_blue,c_aqua,0,1,1);
//draw_text(850,710,string("global.Boss_1 = "+string(global.Boss_1)))
//draw_text(850,710,string(lives))
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="55">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Обнуление остальных переменных обводки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = false
global.two = false
global.three = false
global.four = false
global.five = false
global.six = false
global.seven = true
global.zero = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="54">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Обнуление остальных переменных обводки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = false
global.two = false
global.three = false
global.four = false
global.five = false
global.six = true
global.seven = false
global.zero = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="53">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Обнуление остальных переменных обводки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = false
global.two = false
global.three = false
global.four = false
global.five = true
global.six = false
global.seven = false
global.zero = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="52">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Обнуление остальных переменных обводки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = false
global.two = false
global.three = false
global.four = true
global.five = false
global.six = false
global.seven = false
global.zero = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="51">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>draw_set_color(c_white)//Цвет шрифта
draw_text(600,10,"Score: " + string(score));//Очки
draw_text(600,25,"Missed:" + string(global.missed));//Попадание
draw_text(657,40,string(100-(global.missed/(score/100))) + "%");//Процент точности

//Отрисовка патрон цвета
draw_set_color(c_red);
draw_text(16,725,"1 ");
draw_set_color(c_orange);
draw_text(130,725,"2 " + string(global.orange));
draw_set_color(c_yellow);
draw_text(245,725,"3 " + string(global.yellow));
draw_set_color(c_green);
draw_text(358,725,"4 " + string(global.green ));
draw_set_color(c_aqua);
draw_text(470,725,"5 " + string(global.blue));
draw_set_color(c_blue);
draw_text(586,725,"6 " + string(global.darkBlue));
draw_set_color(c_purple);
draw_text(700,725,"7 " + string(global.purple));

//Если каждого цвета собранно 10 то можно отрисовать магазин
if (global.red&gt;=10 and global.orange&gt;=10 and global.yellow&gt;=10 and global.green&gt;=10 and global.blue&gt;=10 and global.darkBlue&gt;=10 and global.purple&gt;=10)
{/*draw_text(1261,740,"0 Shop ")*/
draw_sprite(spr_shope,-1,1280,700);global.shop = true}
else{global.shop = false}//Если нет то магазин ложь
//Отрисока тестовой информации
//if global.shop == false {draw_text(1261,700,"Shop - false")}
//if global.shop == true {draw_text(1261,700,"Shop - true")}

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = false
global.two = false
global.three = true
global.four = false
global.five = false
global.six = false
global.seven = false
global.zero = false
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="50">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Обнуление остальных переменных обводки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = false
global.two = true
global.three = false
global.four = false
global.five = false
global.six = false
global.seven = false
global.zero = false
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="49">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Обнуление остальных переменных обводки</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.one = true
global.two = false
global.three = false
global.four = false
global.five = false
global.six = false
global.seven = false
global.zero = false

</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="48">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Если магазин доступен рисовать прямоугольник на нём</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.shop == true
    {
        //Обнудение остальных переменных обводки
        global.one = false
        global.two = false
        global.three = false
        global.four = false
        global.five = false
        global.six = false
        global.seven = false
        global.zero = true
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_menu_down</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="27">
      <action>
        <libid>1</libid>
        <id>211</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_sound</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>6</kind>
            <sound>sound_pause</sound>
          </argument>
          <argument>
            <kind>3</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>global.Name_Room = room
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>224</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_another_room</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>11</kind>
            <room>PauseRoom</room>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (file_exists('rekord_list.txt') == false){//Если файл не существует
    if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,0)//Создаём id записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,1)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документ
}}
else{
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '1 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,2)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документ
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '2 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,3)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '3 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,4)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '4 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,5)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '5 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,6)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '6 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,7)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '7 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,8)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '8 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,9)//Создаём id следующей записи
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '9 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
}
name = '';// Обнуляем все используемые переменные
keyboard_string = '';// Обнуляем все используемые переменные
global.exelend = true// Обнуляем все используемые переменные
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>/*if (file_exists('rekord_list.txt') == false){//Если файл не существует
    if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,0)//Создаём id записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        //file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документ
}}
else{
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '0 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,1)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '1 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,1)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '2 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,3)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '3 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,4)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '4 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,5)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '5 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,6)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '6 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,7)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '7 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,8)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    file_text_readln(rekord_list)// Переходит на новую строку
    id_use = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (id_use == '8 '){
        if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_real(rekord_list,9)//Создаём id следующей записи
        file_text_writeln(rekord_list)// Hачинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документc
    }}
}
name = '';// Обнуляем все используемые переменные
keyboard_string = '';// Обнуляем все используемые переменные
global.exelend = true// Обнуляем все используемые переменные
*/
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if (file_exists('rekord_list.txt') == false){//Если файл не существует
    if (name!=''){//при нажатии на Enter если игрок ввел имя
        rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        h = string(global.h)//Часы
        m = string(global.m)//Минуты
        s = string(global.s)//Секунды
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,string(h+'h '+m+':'+s))// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документ
}}
else{
    rekord_list = file_text_open_read('rekord_list.txt')//Открывает для чтения
    file_text_readln(rekord_list)// Переходит на новую строку
    score_txt = file_text_read_string(rekord_list)//Считывает и возвращает число из файла
    file_text_close(rekord_list)//Сохраняет и закрывает документ
    if (score &gt; real(score_txt)){
        //rekord_list = file_text_open_append('rekord_list.txt')//Открывает для записи файл с заданным именем fname. Если файла не существует, то создаётся новый.
        rekord_list = file_text_open_write('rekord_list.txt')//
        file_text_write_string(rekord_list,name)// Записывает имя игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,score)//Записывает очки игрока.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_real(rekord_list,global.missed)//Записывает количество промахов.
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        h = string(global.h)//Часы
        m = string(global.m)//Минуты
        s = string(global.s)//Секунды
        file_text_write_string(rekord_list,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(rekord_list)// Начинает записывать данные с новой строчки).
        file_text_write_string(rekord_list,string(h+'h '+m+':'+s))// Начинает записывать данные с новой строчки).
        file_text_close(rekord_list)//Сохраняет и закрывает документ
}}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>screen_save("paused.png")

audio_pause_all()

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="9" enumb="13">
      <action>
        <libid>1</libid>
        <id>605</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>Действия</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>if global.shop == true and global.zero == true//Если нажат 0 и есть доступ в магаз
    {
        global.Name_Room = room
        room_goto(StoreRoom)//Перейти в магаз
        game_save("savegame")//Сохранить игру
        audio_stop_sound(shop_bleep)
        
        user_name = file_text_open_write('user_name.txt')
        file_text_write_string(user_name,name)// Записывает имя игрока.
        file_text_writeln(user_name)// Начинает записывать данные с новой строчки).
        year = string(current_year)//Создаём переменные времени и года
        mouth = string(current_month)//Создаём переменные времени и года
        day = string(current_day)//Создаём переменные времени и года
        hour = string(current_hour)//Создаём переменные времени и года
        minute = string(current_minute)//Создаём переменные времени и года
        second = string(current_second)//Создаём переменные времени и года
        file_text_write_string(user_name,string(day+'.'+mouth+'.'+year+' '+hour+':'+minute+':'+second))//Запишем ещё и дату это число дней, прошедших с 12/30/1899
        file_text_writeln(user_name)// Начинает записывать данные с новой
        h = string(global.h)//Часы
        m = string(global.m)//Минуты
        s = string(global.s)//Секунды
        file_text_write_string(user_name,string(h+'h '+m+':'+s))
        file_text_close(user_name)//Сохраняет и закрывает документ
    }
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.shop </string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>612</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>-1</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>1</exetype>
        <functionname>action_if_variable</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>0</kind>
            <string>global.zero</string>
          </argument>
          <argument>
            <kind>0</kind>
            <string>true</string>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>422</id>
        <kind>1</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>801</id>
        <kind>0</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>1</exetype>
        <functionname>action_set_cursor</functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>5</kind>
            <sprite>spr_curs</sprite>
          </argument>
          <argument>
            <kind>4</kind>
            <string>0</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
      <action>
        <libid>1</libid>
        <id>424</id>
        <kind>2</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>0</useapplyto>
        <exetype>0</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
